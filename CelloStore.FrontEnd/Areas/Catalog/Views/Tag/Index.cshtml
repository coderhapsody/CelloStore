@model CelloStore.ViewModels.Catalog.Tag.IndexViewModel

<div class="container">
    <div class="page-header">
        <h4>Tag</h4>
    </div>

    <div class="container-form">
        @using (Html.BeginForm())
        {
            <p>
                <a href="@Url.Action("Create")" class="k-button k-button-icon"><span class="fa fa-plus"></span> Add New</a>
                <button type="submit" class="k-button" id="btnDelete" name="btnDelete"><span class="fa fa-eraser"></span> Delete</button>

                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                @Html.Kendo().TextBoxFor(m => m.Search)
                <button type="submit" class="k-button" id="btnSearch" name="btnSearch"><span class="fa fa-search"></span> Search</button>
            </p>
            @(Html.Kendo().Grid(Model.List).Name("Grid").EnableCustomBinding(true).Columns(
                  col =>
                  {
                      col.Bound(m => m.Id).Template(@<text><input type="checkbox" id="chkDelete" name="chkDelete" value="@item.Id" /></text>)
                          .Width(50)
                          .Sortable(false)
                          .Filterable(false)
                          .Title(String.Empty)
                          .HtmlAttributes(new { @class = "checkboxColumn" });
                      col.Bound(m => m.Name);
                      col.Bound(m => m.Id).Template(@<text><a href="@Url.Action("Edit", new {id = @item.Id})" class="k-button"><span class="fa fa-edit"></span> Edit</a>  </text>)
                          .Title(String.Empty)
                          .Width(100)
                          .HtmlAttributes(new { @class = "editColumn" });
                  })
            .Pageable()
            .DataSource(ds => ds.Server().PageSize(Model.PageSize).Total(Model.RowCount))
            .PrefixUrlParameters(false)
            .Sortable(s => s.SortMode(GridSortMode.SingleColumn))            
            )
        }
    </div>
</div>